server {
    listen 80;
    listen [::]:80;

    # !!! REPLACE 'your_domain_or_ip' with your actual domain name or Droplet IP address !!!
    server_name your_domain_or_ip;

    # Max file upload size (adjust as needed, e.g., for maxFileSizeMB in config.json + some buffer)
    client_max_body_size 100M; # Example: 100MB, allows for large batches of files

    location / {
        proxy_pass http://localhost:3000; # Assumes MarkSwift runs on port 3000 locally
        proxy_http_version 1.1;
        
        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Optional: Increase proxy timeouts for long-running conversions if needed
        # proxy_connect_timeout 600s;
        # proxy_send_timeout 600s;
        # proxy_read_timeout 600s;
    }

    # Optional: Access and error logs (customize paths as needed)
    # access_log /var/log/nginx/markswift.access.log;
    # error_log /var/log/nginx/markswift.error.log;

    # Optional: Security headers (uncomment and customize if desired)
    # add_header X-Frame-Options "SAMEORIGIN" always;
    # add_header X-XSS-Protection "1; mode=block" always;
    # add_header X-Content-Type-Options "nosniff" always;
    # add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com; img-src 'self' data:; font-src 'self' https://cdnjs.cloudflare.com; connect-src 'self' ws: wss:;" always;
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
}

# If you enable HTTPS with Certbot, it will typically create a new server block for port 443
# or modify this one. Example of what Certbot might add/modify:
#
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name your_domain_or_ip;
#
#     ssl_certificate /etc/letsencrypt/live/your_domain_or_ip/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/your_domain_or_ip/privkey.pem;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#
#     # ... rest of your location block and other settings ...
# }
#
# If you want to redirect HTTP to HTTPS after setting up SSL:
# server {
#    listen 80;
#    server_name your_domain_or_ip;
#    return 301 https://$host$request_uri;
# }
